===============================================================================

Задание 1
	Описать класс Пациент, содержащий поля для хранения фамилии, диагноза,
    даты и времени приема, номера кабинета.

    Описать класс Врач, содержащий следующие поля: фамилия, время приема, номер кабинета.
	Разработать программу на основе шаблона «наблюдатель» с использованием
    событий на основе делегата EventHandler, которая выполняет следующие действия:

⦁	Создает два объекта класса Врач.
⦁	Создает четыре объекта класса Пациент: два лечатся у одного врача, два у другого.
    Каждый пациент  должен быть «зарегистрирован» в «своем» объекте класса  Врач.
⦁	Выводит информацию о пациентах в виде:

Врач Петухов В.В. кабинет №2  
№	Фамилия	Дата 
приема	диагноз
1	Иванов	29.12.09	грипп
2	Петров	3.08.09	пневмония

Врач Петренко А.С.  кабинет №12  
№	Фамилия	Дата 
приема	диагноз
1	Дибров	12.03.09	перелом
2	Семенов	25.04.09	растяжение

⦁	При изменении номера кабинета в котором принимает врач
    (фамилию врача вводить с клавиатуры) автоматически «оповещает» всех пациентов.
⦁	Выводит измененную информацию о пациентах  в  виде:

№	Фамилия	Номер кабинета	Дата 
приема	Время приема	Фамилия врача	диагноз
1	Иванов	15	29.12.09	15:40	Петухов В.В.	грипп
2	Петров	15	3.08.09	15:40	Петухов В.В.	пневмония
3	Дибров	12	12.03.09	21:50	Петренко А.С.	перелом
4	Семенов	12	25.04.09	21:50	Петренко А.С.	растяжение

===============================================================================

Задание 2.
int[] values1 = new int[5] { 1, 10, 5, 13, 4 }; 
int[] values2 = new int[5] { 19, 1, 4, 9, 8 };
1) Посчитать среднее значение четных элементов, которые больше 10. 
2) Выбрать только уникальные элементы из массивов values1 и values2. 
3) Найти максимальный элемент массива values2, который есть в массиве values1. 
4) Посчитать сумму элементов массивов values1 и values2, которые попадают 
   в диапазон от 5 до 15.
5) Отсортировать элементы массивов values1 и values2 по убыванию.

===============================================================================

Задание 3.
class Employee
{
public int Id { get; set; }
public string FirstName { get; set; }
public string LastName { get; set; }
public int Age { get; set; }
public int DepId { get; set; }
}
class Department
{
public int Id { get; set; }
public string Country { get; set; }
public string City { get; set; }
}

List<Department> departments = new List<Department>()
{
new Department(){ Id = 1, Country = "Ukraine", City = "Donetsk" },
new Department(){ Id = 2, Country = "Ukraine", City = "Kyiv" },
new Department(){ Id = 3, Country = "France", City = "Paris" },
new Department(){ Id = 4, Country = "Russia", City = "Moscow" }
};
List<Employee> employees = new List<Employee>()
{
new Employee()
{
Id = 1, FirstName = "Tamara", LastName = "Ivanova", Age = 22, DepId = 2
},
new Employee()
{
Id = 2, FirstName = "Nikita", LastName = "Larin", Age = 33, DepId = 1
},
new Employee()
{
Id = 3, FirstName = "Alica", LastName = "Ivanova", Age = 43, DepId = 3
},
new Employee()
{
Id = 4, FirstName = "Lida", LastName = "Marusyk", Age = 22, DepId = 2
},
new Employee()
{
Id = 5, FirstName = "Lida", LastName = "Voron", Age = 36, DepId = 4
},
new Employee()
{
Id = 6, FirstName = "Ivan", LastName = "Kalyta", Age = 22, DepId = 2
},
new Employee()
{
Id = 7, FirstName = "Nikita", LastName = "Krotov", Age = 27, DepId = 4
}
};

⦁	Упорядочить имена и фамилии сотрудников по алфавиту,
    которые проживают в Украине. Выполнить запрос немедленно. 
⦁	Отсортировать сотрудников по возрастам, по убыванию. Вывести Id, FirstName,
    LastName, Age. Выполнить запрос немедленно. 
⦁	Сгруппировать студентов по возрасту. Вывести возраст и сколько 
    раз он встречается в списке.

===============================================================================

Задание 4.
Написать программу, выполняющую следующие функции:

- Формирование коллекции объектов класса Сотрудник (Фамилия, должность, отдел, возраст)
- Формирование коллекции объектов класса Зарплата ( должность, размер зарплаты)
- Вывод списка сотрудников моложе 30 лет в алфавитном порядке с указанием возраста
- Вывод списка отделов (без повторений) 
- Определение среднего возраста сотрудников для каждого отдела.
  Выводить название отдела и средний возраст в порядке убывания возраста.
- Вывод списка сотрудников заданного отдела с указанием зарплаты и должности
- Определение отдела с максимальной средней зарплатой
- Определение количества сотрудников в каждом отделе
- Определение минимального возраста для каждой должности

===============================================================================

Задание 5.
Разработать консольную игру «Удавчик».
Змея перемещается по экрану в заданном направлении, которое можно изменить,
нажимая клавиши со стрелками. При столкновении змеи с препятствием или с 
границей игровой области игра заканчивается. При нажатии на пробел игра останавливается,
движение змеи возобновляется при повторном нажатии пробела.
При нажатии на клавишу Escape происходит выход из игры.
На игровом поле случайным образом появляются «плюшки» для удава, которые
через некоторое время исчезают. Если удав «съедает» такую «плюшку»,
его длина увеличивается, а также возрастает скорость его движения.
За каждый съеденный приз начисляются очки. По окончании игры выводится результат.

При разработке приложения придерживаться стиля ООП и предусмотреть
дальнейшее развитие программы
(например, реализацию в приложении с графическим интерфейсом).

===============================================================================

